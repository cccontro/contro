namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace ns1 = "http://www.w3.org/1999/xhtml"
namespace rng = "http://relaxng.org/ns/structure/1.0"
namespace sch = "http://purl.oclc.org/dsdl/schematron"
default namespace tei = "http://www.tei-c.org/ns/1.0"
namespace teix = "http://www.tei-c.org/ns/Examples"
namespace xi = "http://www.w3.org/2001/XInclude"
namespace xlink = "http://www.w3.org/1999/xlink"

# Schema generated from ODD source 2025-08-07T23:27:44Z. . 
# TEI Edition: P5 VersionÂ 4.10.0a. Last updated on 19th May 2025, revision 2aeaaa198 
# TEI Edition Location: https://www.tei-c.org/Vault/P5/4.10.0a/ 
#

# TEI material can be licensed differently depending on the use you intend to make of it. Hence it is made available under both the CC+BY and BSD-2 licences. The CC+BY licence is generally appropriate for usages which treat TEI content as data or documentation. The BSD-2 licence is generally appropriate for usage of TEI content in a software environment. For further information or clarification, please contact the TEI Consortium (info@tei-c.org).
tei_macro.paraContent = (text | tei_model.paraPart)*
tei_macro.limitedContent =
  (text | tei_model.limitedPhrase | tei_model.inter)*
tei_macro.phraseSeq =
  (text
   | tei_model.gLike
   | tei_model.attributable
   | tei_model.phrase
   | tei_model.global)*
tei_macro.phraseSeq.limited =
  (text | tei_model.limitedPhrase | tei_model.global)*
tei_macro.specialPara =
  (text
   | tei_model.gLike
   | tei_model.phrase
   | tei_model.inter
   | tei_model.divPart
   | tei_model.global)*
tei_att.anchoring.attributes =
  tei_att.anchoring.attribute.anchored,
  tei_att.anchoring.attribute.targetEnd
tei_att.anchoring.attribute.anchored =
  
  ## (anchored) indicates whether the copy text shows the exact place of reference for the note.
  [ a:defaultValue = "true" ] attribute anchored { xsd:boolean }?
tei_att.anchoring.attribute.targetEnd =
  
  ## (target end) points to the end of the span to which the note is attached, if the note is not embedded in the text at that point.
  attribute targetEnd {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.ascribed.attributes = tei_att.ascribed.attribute.who
tei_att.ascribed.attribute.who =
  
  ## indicates the person, or group of people, to whom the element content is ascribed.
  attribute who {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.cReferencing.attributes = tei_att.cReferencing.attribute.cRef
tei_att.cReferencing.attribute.cRef =
  [
    a:documentation [
      "(canonical reference) specifies the destination of the pointer by supplying a canonical reference expressed using the scheme defined in a "
      ns1:code [ "<refsDecl>" ]
      " element in the TEI header."
    ]
  ]
  attribute cRef { xsd:string }?
tei_att.canonical.attributes =
  tei_att.canonical.attribute.key, tei_att.canonical.attribute.ref
tei_att.canonical.attribute.key =
  
  ## provides an externally-defined means of identifying the entity (or entities) being named, using a coded value of some kind.
  attribute key { xsd:string }?
tei_att.canonical.attribute.ref =
  
  ## (reference) provides an explicit means of locating a full definition or identity for the entity being named by means of one or more URIs.
  attribute ref {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.citing.attributes =
  tei_att.citing.attribute.unit,
  tei_att.citing.attribute.from,
  tei_att.citing.attribute.to
tei_att.citing.attribute.unit =
  
  ## identifies the unit of information conveyed by the element.
  ## Suggested values include: 1] volume (volume); 2] issue; 3] page (page); 4] line; 5] chapter (chapter); 6] part; 7] column; 8] entry
  attribute unit {
    
    ## (volume) the element contains a volume number.
    "volume"
    | 
      ## the element contains an issue number, or volume and issue numbers.
      "issue"
    | 
      ## (page) the element contains a page number or page range.
      "page"
    | 
      ## the element contains a line number or line range.
      "line"
    | 
      ## (chapter) the element contains a chapter indication (number and/or title)
      "chapter"
    | 
      ## the element identifies a part of a book or collection.
      "part"
    | 
      ## the element identifies a column.
      "column"
    | 
      ## the element identifies an entry number or label in a list of entries.
      "entry"
    | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.citing.attribute.from =
  [
    a:documentation [
      "specifies the starting point of the range of units indicated by the "
      ns1:code [ "@unit" ]
      " attribute."
    ]
  ]
  attribute from {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.citing.attribute.to =
  [
    a:documentation [
      "specifies the end-point of the range of units indicated by the "
      ns1:code [ "@unit" ]
      " attribute."
    ]
  ]
  attribute to {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.cmc.attributes = tei_att.cmc.attribute.generatedBy
tei_att.cmc.attribute.generatedBy =
  
  ## (generated by) categorizes how the content of an element was generated in a CMC environment.
  ## Suggested values include: 1] human; 2] template; 3] system; 4] bot; 5] unspecified
  attribute generatedBy {
    
    ## the content was naturally typed or spoken by a human user
    "human"
    | 
      ## the content was generated after a human user activated a template for its insertion
      "template"
    | 
      ## the content was generated by the system, i.e. the CMC environment
      "system"
    | 
      ## the content was generated by a bot, i.e. a non-human agent, typically one that is not part of the CMC environment itself
      "bot"
    | 
      ## the content was generated by an unknown or unspecified process
      "unspecified"
    | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
sch:pattern [
  id =
    "arg-att.cmc-generatedBy-CMC_generatedBy_within_post-constraint-rule-1"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@generatedBy]"
    "\x{a}" ~
    "         "
    sch:assert [
      test = "ancestor-or-self::tei:post"
      "The @generatedBy attribute is for use within a <post> element."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_att.datable.w3c.attributes =
  tei_att.datable.w3c.attribute.when,
  tei_att.datable.w3c.attribute.notBefore,
  tei_att.datable.w3c.attribute.notAfter,
  tei_att.datable.w3c.attribute.from,
  tei_att.datable.w3c.attribute.to
tei_att.datable.w3c.attribute.when =
  
  ## supplies the value of the date or time in a standard form, e.g. yyyy-mm-dd.
  attribute when {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
tei_att.datable.w3c.attribute.notBefore =
  
  ## specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notBefore {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
tei_att.datable.w3c.attribute.notAfter =
  
  ## specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notAfter {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
tei_att.datable.w3c.attribute.from =
  
  ## indicates the starting point of the period in standard form, e.g. yyyy-mm-dd.
  attribute from {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
tei_att.datable.w3c.attribute.to =
  
  ## indicates the ending point of the period in standard form, e.g. yyyy-mm-dd.
  attribute to {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
sch:pattern [
  id = "arg-att.datable.w3c-att-datable-w3c-when-constraint-rule-2"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@when]"
    "\x{a}" ~
    "         "
    sch:report [
      test = "@notBefore|@notAfter|@from|@to"
      role = "nonfatal"
      "The @when attribute cannot be used with any other att.datable.w3c attributes."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
sch:pattern [
  id = "arg-att.datable.w3c-att-datable-w3c-from-constraint-rule-3"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@from]"
    "\x{a}" ~
    "         "
    sch:report [
      test = "@notBefore"
      role = "nonfatal"
      "The @from and @notBefore attributes cannot be used together."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
sch:pattern [
  id = "arg-att.datable.w3c-att-datable-w3c-to-constraint-rule-4"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@to]"
    "\x{a}" ~
    "         "
    sch:report [
      test = "@notAfter"
      role = "nonfatal"
      "The @to and @notAfter attributes cannot be used together."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_att.datcat.attributes =
  tei_att.datcat.attribute.datcat,
  tei_att.datcat.attribute.valueDatcat,
  tei_att.datcat.attribute.targetDatcat
tei_att.datcat.attribute.datcat =
  [
    a:documentation [
      "provides a pointer to a definition of, and/or general information about, (a) an information container (element or attribute) or (b) a value of an information container (element content or attribute value), by referencing an external taxonomy or ontology. If "
      ns1:code [ "@valueDatcat" ]
      " is present in the immediate context, this attribute takes on role (a), while "
      ns1:code [ "@valueDatcat" ]
      " performs role (b)."
    ]
  ]
  attribute datcat {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.datcat.attribute.valueDatcat =
  [
    a:documentation [
      "provides a definition of, and/or general information about a value of an information container (element content or attribute value), by reference to an external taxonomy or ontology. Used especially where a contrast with "
      ns1:code [ "@datcat" ]
      " is needed."
    ]
  ]
  attribute valueDatcat {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.datcat.attribute.targetDatcat =
  [
    a:documentation [
      "provides a definition of, and/or general information about, information structure of an object referenced or modeled by the containing element, by reference to an external taxonomy or ontology. This attribute has the characteristics of the "
      ns1:code [ "@datcat" ]
      " attribute, except that it addresses not its containing element, but an object that is being referenced or modeled by its containing element."
    ]
  ]
  attribute targetDatcat {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.declarable.attributes = tei_att.declarable.attribute.default
tei_att.declarable.attribute.default =
  
  ## indicates whether or not this element is selected by default when its parent is selected.
  [ a:defaultValue = "false" ]
  attribute default {
    
    ## This element is selected if its parent is selected
    "true"
    | 
      ## This element can only be selected explicitly, unless it is the only one of its kind, in which case it is selected if its parent is selected.
      "false"
  }?
tei_att.declaring.attributes = tei_att.declaring.attribute.decls
tei_att.declaring.attribute.decls =
  
  ## (declarations) identifies one or more declarable elements within the header, which are understood to apply to the element bearing this attribute and its content.
  attribute decls {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.docStatus.attributes = tei_att.docStatus.attribute.status
tei_att.docStatus.attribute.status =
  
  ## describes the status of a document either currently or, when associated with a dated element, at the time indicated.
  ## Sample values include: 1] approved; 2] candidate; 3] cleared; 4] deprecated; 5] draft; 6] embargoed; 7] expired; 8] frozen; 9] galley; 10] proposed; 11] published; 12] recommendation; 13] submitted; 14] unfinished; 15] withdrawn
  [ a:defaultValue = "draft" ]
  attribute status {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.editLike.attributes =
  tei_att.editLike.attribute.evidence,
  tei_att.editLike.attribute.instant
tei_att.editLike.attribute.evidence =
  
  ## indicates the nature of the evidence supporting the reliability or accuracy of the intervention or interpretation.
  ## Suggested values include: 1] internal; 2] external; 3] conjecture
  attribute evidence {
    list {
      (
       ## there is internal evidence to support the intervention.
       "internal"
       | 
         ## there is external evidence to support the intervention.
         "external"
       | 
         ## the intervention or interpretation has been made by the editor, cataloguer, or scholar on the basis of their expertise.
         "conjecture"
       | xsd:token { pattern = "[^\p{C}\p{Z}]+" })+
    }
  }?
tei_att.editLike.attribute.instant =
  
  ## indicates whether this is an instant revision or not.
  [ a:defaultValue = "false" ]
  attribute instant {
    xsd:boolean
    | (
       ##
       "unknown"
       | 
         ##
         "inapplicable")
  }?
tei_att.fragmentable.attributes = tei_att.fragmentable.attribute.part
tei_att.fragmentable.attribute.part =
  
  ## specifies whether or not its parent element is fragmented in some way, typically by some other overlapping structure: for example a speech which is divided between two or more verse stanzas, a paragraph which is split across a page division, a verse line which is divided between two speakers.
  [ a:defaultValue = "N" ]
  attribute part {
    
    ## (yes) the element is fragmented in some (unspecified) respect
    "Y"
    | 
      ## (no) the element is not fragmented, or no claim is made as to its completeness
      "N"
    | 
      ## (initial) this is the initial part of a fragmented element
      "I"
    | 
      ## (medial) this is a medial part of a fragmented element
      "M"
    | 
      ## (final) this is the final part of a fragmented element
      "F"
  }?
tei_att.global.rendition.attributes =
  tei_att.global.rendition.attribute.rend,
  tei_att.global.rendition.attribute.style,
  tei_att.global.rendition.attribute.rendition
tei_att.global.rendition.attribute.rend =
  
  ## (rendition) indicates how the element in question was rendered or presented in the source text.
  attribute rend {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
tei_att.global.rendition.attribute.style =
  
  ## contains an expression in some formal style definition language which defines the rendering or presentation used for this element in the source text.
  attribute style { xsd:string }?
tei_att.global.rendition.attribute.rendition =
  
  ## points to a description of the rendering or presentation used for this element in the source text.
  attribute rendition {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.global.responsibility.attributes =
  tei_att.global.responsibility.attribute.cert,
  tei_att.global.responsibility.attribute.resp
tei_att.global.responsibility.attribute.cert =
  
  ## (certainty) signifies the degree of certainty associated with the intervention or interpretation.
  attribute cert {
    xsd:double { minInclusive = "0" maxInclusive = "1" }
    | (
       ##
       "high"
       | 
         ##
         "medium"
       | 
         ##
         "low"
       | 
         ##
         "unknown")
  }?
tei_att.global.responsibility.attribute.resp =
  
  ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
  attribute resp {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.global.source.attributes =
  tei_att.global.source.attribute.source
tei_att.global.source.attribute.source =
  
  ## specifies the source from which some aspect of this element is drawn.
  attribute source {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
sch:pattern [
  id =
    "arg-att.global.source-source-only_1_ODD_source-constraint-rule-5"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@source]"
    "\x{a}" ~
    "         "
    sch:let [
      name = "srcs"
      value = "tokenize( normalize-space(@source),' ')"
    ]
    "\x{a}" ~
    "         "
    sch:report [
      test =
        "(   self::tei:classRef                                 | self::tei:dataRef                                 | self::tei:elementRef                                 | self::tei:macroRef                                 | self::tei:moduleRef                                 | self::tei:schemaSpec )                                   and                                   $srcs[2]"
      "\x{a}" ~
      "              When used on a schema description element (like\x{a}" ~
      "              "
      sch:value-of [ select = "name(.)" ]
      "), the @source attribute\x{a}" ~
      "              should have only 1 value. (This one has "
      sch:value-of [ select = "count($srcs)" ]
      ".)\x{a}" ~
      "            "
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_att.internetMedia.attributes =
  tei_att.internetMedia.attribute.mimeType
tei_att.internetMedia.attribute.mimeType =
  
  ## (MIME media type) specifies the applicable multimedia internet mail extension (MIME) media type.
  attribute mimeType {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
tei_att.interpLike.attributes =
  tei_att.interpLike.attribute.type,
  tei_att.interpLike.attribute.subtype,
  tei_att.interpLike.attribute.inst
tei_att.interpLike.attribute.type =
  
  ## indicates what kind of phenomenon is being noted in the passage.
  ## Sample values include: 1] image; 2] character; 3] theme; 4] allusion
  attribute type {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.interpLike.attribute.subtype =
  
  ## (subtype) provides a sub-categorization of the phenomenon is being noted in the passage, if needed.
  attribute subtype {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.interpLike.attribute.inst =
  
  ## (instances) points to instances of the analysis or interpretation represented by the current element.
  attribute inst {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.notated.attributes = tei_att.notated.attribute.notation
tei_att.notated.attribute.notation =
  
  ## names the notation used for the content of the element.
  attribute notation {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.placement.attributes = tei_att.placement.attribute.place
tei_att.placement.attribute.place =
  
  ## specifies where this item is placed.
  ## Suggested values include: 1] top; 2] bottom; 3] margin; 4] opposite; 5] overleaf; 6] above; 7] right; 8] below; 9] left; 10] end; 11] inline; 12] inspace
  attribute place {
    list {
      (
       ## at the top of the page
       "top"
       | 
         ## at the foot of the page
         "bottom"
       | 
         ## in the margin (left, right, or both)
         "margin"
       | 
         ## on the opposite, i.e. facing, page
         "opposite"
       | 
         ## on the other side of the leaf
         "overleaf"
       | 
         ## above the line
         "above"
       | 
         ## to the right, e.g. to the right of a vertical line of text, or to the right of a figure
         "right"
       | 
         ## below the line
         "below"
       | 
         ## to the left, e.g. to the left of a vertical line of text, or to the left of a figure
         "left"
       | 
         ## at the end of e.g. chapter or volume.
         "end"
       | 
         ## within the body of the text.
         "inline"
       | 
         ## in a predefined space, for example left by an earlier scribe.
         "inspace"
       | xsd:token { pattern = "[^\p{C}\p{Z}]+" })+
    }
  }?
tei_att.pointing.attributes =
  tei_att.pointing.attribute.targetLang,
  tei_att.pointing.attribute.target,
  tei_att.pointing.attribute.evaluate
tei_att.pointing.attribute.targetLang =
  [
    a:documentation [
      "specifies the language of the content to be found at the destination referenced by "
      ns1:code [ "@target" ]
      ", using a language tag generated according to "
      ns1:a [
        href = "http://www.rfc-editor.org/rfc/bcp/bcp47.txt"
        "BCP 47"
      ]
      "."
    ]
  ]
  attribute targetLang {
    xsd:language
    | (
       ##
       "")
  }?
sch:pattern [
  id = "arg-att.pointing-targetLang-targetLang-constraint-rule-6"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[not(self::tei:schemaSpec)][@targetLang]"
    "\x{a}" ~
    "         "
    sch:assert [
      test = "@target"
      "@targetLang should only be used on "
      sch:name [ ]
      " if @target is specified."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_att.pointing.attribute.target =
  
  ## specifies the destination of the reference by supplying one or more URI References.
  attribute target {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.pointing.attribute.evaluate =
  
  ## (evaluate) specifies the intended meaning when the target of a pointer is itself a pointer.
  attribute evaluate {
    
    ## if the element pointed to is itself a pointer, then the target of that pointer will be taken, and so on, until an element is found which is not a pointer.
    "all"
    | 
      ## if the element pointed to is itself a pointer, then its target (whether a pointer or not) is taken as the target of this pointer.
      "one"
    | 
      ## no further evaluation of targets is carried out beyond that needed to find the element specified in the pointer's target.
      "none"
  }?
tei_att.ranging.attributes =
  tei_att.ranging.attribute.atLeast,
  tei_att.ranging.attribute.atMost,
  tei_att.ranging.attribute.min,
  tei_att.ranging.attribute.max,
  tei_att.ranging.attribute.confidence
tei_att.ranging.attribute.atLeast =
  
  ## gives a minimum estimated value for the approximate measurement.
  attribute atLeast {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.ranging.attribute.atMost =
  
  ## gives a maximum estimated value for the approximate measurement.
  attribute atMost {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.ranging.attribute.min =
  
  ## where the measurement summarizes more than one observation or a range, supplies the minimum value observed.
  attribute min {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.ranging.attribute.max =
  
  ## where the measurement summarizes more than one observation or a range, supplies the maximum value observed.
  attribute max {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.ranging.attribute.confidence =
  [
    a:documentation [
      "specifies the degree of statistical confidence (between zero and one) that a value falls within the range specified by "
      ns1:code [ "@min" ]
      " and "
      ns1:code [ "@max" ]
      ", or the proportion of observed values that fall within that range."
    ]
  ]
  attribute confidence {
    xsd:double { minInclusive = "0" maxInclusive = "1" }
  }?
tei_att.sortable.attributes = tei_att.sortable.attribute.sortKey
tei_att.sortable.attribute.sortKey =
  
  ## supplies the sort key for this element in an index, list or group which contains it.
  attribute sortKey {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.typed.attributes =
  tei_att.typed.attribute.type, tei_att.typed.attribute.subtype
tei_att.typed.attribute.type =
  
  ## characterizes the element in some sense, using any convenient classification scheme or typology.
  attribute type {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.typed.attribute.subtype =
  
  ## (subtype) provides a sub-categorization of the element, if needed.
  attribute subtype {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
sch:pattern [
  id = "arg-att.typed-subtypeTyped-constraint-rule-7"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@subtype]"
    "\x{a}" ~
    "         "
    sch:assert [
      test = "@type"
      "The "
      sch:name [ ]
      " element should not be categorized in detail with @subtype unless also categorized in general with @type"
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_att.written.attributes = tei_att.written.attribute.hand
tei_att.written.attribute.hand =
  [
    a:documentation [
      "points to a "
      ns1:code [ "<handNote>" ]
      " element describing the hand considered responsible for the content of the element concerned."
    ]
  ]
  attribute hand {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.ascribed.directed.attributes =
  tei_att.ascribed.attributes,
  tei_att.ascribed.directed.attribute.toWhom
tei_att.ascribed.directed.attribute.toWhom =
  
  ## indicates the person, or group of people, to whom a speech act or action is directed.
  attribute toWhom {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.datable.attributes =
  tei_att.datable.custom.attributes,
  tei_att.datable.iso.attributes,
  tei_att.datable.w3c.attributes,
  tei_att.datable.attribute.period
tei_att.datable.attribute.period =
  [
    a:documentation [
      "supplies pointers to one or more definitions of named periods of time (typically "
      ns1:code [ "<category>" ]
      "s, "
      ns1:code [ "<date>" ]
      "s, or "
      ns1:code [ "<event>" ]
      "s) within which the datable item is understood to have occurred."
    ]
  ]
  attribute period {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.dimensions.attributes =
  tei_att.ranging.attributes,
  tei_att.dimensions.attribute.unit,
  tei_att.dimensions.attribute.quantity,
  tei_att.dimensions.attribute.extent,
  tei_att.dimensions.attribute.precision,
  tei_att.dimensions.attribute.scope
tei_att.dimensions.attribute.unit =
  
  ## names the unit used for the measurement
  ## Suggested values include: 1] cm (centimetres); 2] mm (millimetres); 3] in (inches); 4] line; 5] char (characters)
  attribute unit {
    
    ## (centimetres) 
    "cm"
    | 
      ## (millimetres) 
      "mm"
    | 
      ## (inches) 
      "in"
    | 
      ## lines of text
      "line"
    | 
      ## (characters) characters of text
      "char"
    | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.dimensions.attribute.quantity =
  
  ## specifies the length in the units specified
  attribute quantity {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.dimensions.attribute.extent =
  
  ## indicates the size of the object concerned using a project-specific vocabulary combining quantity and units in a single string of words.
  attribute extent { xsd:string }?
tei_att.dimensions.attribute.precision =
  
  ## characterizes the precision of the values specified by the other attributes.
  attribute precision {
    
    ##
    "high"
    | 
      ##
      "medium"
    | 
      ##
      "low"
    | 
      ##
      "unknown"
  }?
tei_att.dimensions.attribute.scope =
  
  ## where the measurement summarizes more than one observation, specifies the applicability of this measurement.
  ## Sample values include: 1] all; 2] most; 3] range
  attribute scope {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.divLike.attributes =
  tei_att.fragmentable.attributes,
  tei_att.divLike.attribute.org,
  tei_att.divLike.attribute.sample
tei_att.divLike.attribute.org =
  
  ## (organization) specifies how the content of the division is organized.
  [ a:defaultValue = "uniform" ]
  attribute org {
    
    ## no claim is made about the sequence in which the immediate contents of this division are to be processed, or their inter-relationships.
    "composite"
    | 
      ## the immediate contents of this element are regarded as forming a logical unit, to be processed in sequence.
      "uniform"
  }?
tei_att.divLike.attribute.sample =
  
  ## indicates whether this division is a sample of the original source and if so, from which part.
  [ a:defaultValue = "complete" ]
  attribute sample {
    
    ## division lacks material present at end in source.
    "initial"
    | 
      ## division lacks material at start and end.
      "medial"
    | 
      ## division lacks material at start.
      "final"
    | 
      ## position of sampled material within original unknown.
      "unknown"
    | 
      ## division is not a sample.
      "complete"
  }?
tei_att.global.attributes =
  tei_att.global.analytic.attributes,
  tei_att.global.change.attributes,
  tei_att.global.facs.attributes,
  tei_att.global.linking.attributes,
  tei_att.global.rendition.attributes,
  tei_att.global.responsibility.attributes,
  tei_att.global.source.attributes,
  tei_att.global.attribute.xmlid,
  tei_att.global.attribute.n,
  tei_att.global.attribute.xmllang,
  tei_att.global.attribute.xmlbase,
  tei_att.global.attribute.xmlspace
tei_att.global.attribute.xmlid =
  
  ## (identifier) provides a unique identifier for the element bearing the attribute.
  attribute xml:id { xsd:ID }?
tei_att.global.attribute.n =
  
  ## (number) gives a number (or other label) for an element, which is not necessarily unique within the document.
  attribute n { xsd:string }?
tei_att.global.attribute.xmllang =
  [
    a:documentation [
      "(language) indicates the language of the element content using a tag generated according to "
      ns1:a [
        href = "http://www.rfc-editor.org/rfc/bcp/bcp47.txt"
        "BCP 47"
      ]
      "."
    ]
  ]
  attribute xml:lang {
    xsd:language
    | (
       ##
       "")
  }?
tei_att.global.attribute.xmlbase =
  
  ## provides a base URI reference with which applications can resolve relative URI references into absolute URI references.
  attribute xml:base {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.global.attribute.xmlspace =
  
  ## signals an intention about how white space should be managed by applications.
  attribute xml:space {
    
    ## signals that the application's default white-space processing modes are acceptable
    "default"
    | 
      ## indicates the intent that applications preserve all white space
      "preserve"
  }?
tei_att.naming.attributes =
  tei_att.canonical.attributes,
  tei_att.naming.attribute.role,
  tei_att.naming.attribute.nymRef
tei_att.naming.attribute.role =
  
  ## may be used to specify further information about the entity referenced by this name in the form of a set of whitespace-separated values, for example the occupation of a person, or the status of a place.
  attribute role {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
tei_att.naming.attribute.nymRef =
  
  ## (reference to the canonical name) provides a means of locating the canonical form (nym) of the names associated with the object named by the element bearing it.
  attribute nymRef {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.segLike.attributes =
  tei_att.datcat.attributes,
  tei_att.fragmentable.attributes,
  tei_att.segLike.attribute.function
tei_att.segLike.attribute.function =
  
  ## (function) characterizes the function of the segment.
  attribute function {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.timed.attributes =
  tei_att.timed.attribute.start, tei_att.timed.attribute.end
tei_att.timed.attribute.start =
  
  ## indicates the location within a temporal alignment at which this element begins.
  attribute start {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.timed.attribute.end =
  
  ## indicates the location within a temporal alignment at which this element ends.
  attribute end {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_model.nameLike.agent = tei_persName
tei_model.nameLike.agent_alternation = tei_persName
tei_model.nameLike.agent_sequence = tei_persName
tei_model.nameLike.agent_sequenceOptional = tei_persName?
tei_model.nameLike.agent_sequenceOptionalRepeatable = tei_persName*
tei_model.nameLike.agent_sequenceRepeatable = tei_persName+
tei_model.segLike = tei_seg
tei_model.segLike_alternation = tei_seg
tei_model.segLike_sequence = tei_seg
tei_model.segLike_sequenceOptional = tei_seg?
tei_model.segLike_sequenceOptionalRepeatable = tei_seg*
tei_model.segLike_sequenceRepeatable = tei_seg+
tei_model.hiLike = tei_q
tei_model.hiLike_alternation = tei_q
tei_model.hiLike_sequence = tei_q
tei_model.hiLike_sequenceOptional = tei_q?
tei_model.hiLike_sequenceOptionalRepeatable = tei_q*
tei_model.hiLike_sequenceRepeatable = tei_q+
tei_model.emphLike = tei_foreign | tei_mentioned | tei_title
tei_model.emphLike_alternation = tei_foreign | tei_mentioned | tei_title
tei_model.emphLike_sequence = tei_foreign, tei_mentioned, tei_title
tei_model.emphLike_sequenceOptional =
  tei_foreign?, tei_mentioned?, tei_title?
tei_model.emphLike_sequenceOptionalRepeatable =
  tei_foreign*, tei_mentioned*, tei_title*
tei_model.emphLike_sequenceRepeatable =
  tei_foreign+, tei_mentioned+, tei_title+
tei_model.highlighted = tei_model.hiLike | tei_model.emphLike
tei_model.highlighted_alternation =
  tei_model.hiLike_alternation | tei_model.emphLike_alternation
tei_model.highlighted_sequence =
  tei_model.hiLike_sequence, tei_model.emphLike_sequence
tei_model.highlighted_sequenceOptional =
  tei_model.hiLike_sequenceOptional?,
  tei_model.emphLike_sequenceOptional?
tei_model.highlighted_sequenceOptionalRepeatable =
  tei_model.hiLike_sequenceOptionalRepeatable*,
  tei_model.emphLike_sequenceOptionalRepeatable*
tei_model.highlighted_sequenceRepeatable =
  tei_model.hiLike_sequenceRepeatable+,
  tei_model.emphLike_sequenceRepeatable+
tei_model.dateLike = tei_date
tei_model.dateLike_alternation = tei_date
tei_model.dateLike_sequence = tei_date
tei_model.dateLike_sequenceOptional = tei_date?
tei_model.dateLike_sequenceOptionalRepeatable = tei_date*
tei_model.dateLike_sequenceRepeatable = tei_date+
tei_model.measureLike = notAllowed
tei_model.measureLike_alternation = notAllowed
tei_model.measureLike_sequence = empty
tei_model.measureLike_sequenceOptional = empty
tei_model.measureLike_sequenceOptionalRepeatable = empty
tei_model.measureLike_sequenceRepeatable = notAllowed
tei_model.egLike = notAllowed
tei_model.egLike_alternation = notAllowed
tei_model.egLike_sequence = empty
tei_model.egLike_sequenceOptional = empty
tei_model.egLike_sequenceOptionalRepeatable = empty
tei_model.egLike_sequenceRepeatable = notAllowed
tei_model.graphicLike = notAllowed
tei_model.graphicLike_alternation = notAllowed
tei_model.graphicLike_sequence = empty
tei_model.graphicLike_sequenceOptional = empty
tei_model.graphicLike_sequenceOptionalRepeatable = empty
tei_model.graphicLike_sequenceRepeatable = notAllowed
tei_model.offsetLike = notAllowed
tei_model.offsetLike_alternation = notAllowed
tei_model.offsetLike_sequence = empty
tei_model.offsetLike_sequenceOptional = empty
tei_model.offsetLike_sequenceOptionalRepeatable = empty
tei_model.offsetLike_sequenceRepeatable = notAllowed
tei_model.pPart.msdesc = tei_locus
tei_model.pPart.msdesc_alternation = tei_locus
tei_model.pPart.msdesc_sequence = tei_locus
tei_model.pPart.msdesc_sequenceOptional = tei_locus?
tei_model.pPart.msdesc_sequenceOptionalRepeatable = tei_locus*
tei_model.pPart.msdesc_sequenceRepeatable = tei_locus+
tei_model.pPart.editorial = notAllowed
tei_model.pPart.editorial_alternation = notAllowed
tei_model.pPart.editorial_sequence = empty
tei_model.pPart.editorial_sequenceOptional = empty
tei_model.pPart.editorial_sequenceOptionalRepeatable = empty
tei_model.pPart.editorial_sequenceRepeatable = notAllowed
tei_model.pPart.transcriptional = notAllowed
tei_model.pPart.transcriptional_alternation = notAllowed
tei_model.pPart.transcriptional_sequence = empty
tei_model.pPart.transcriptional_sequenceOptional = empty
tei_model.pPart.transcriptional_sequenceOptionalRepeatable = empty
tei_model.pPart.transcriptional_sequenceRepeatable = notAllowed
tei_model.pPart.edit =
  tei_model.pPart.editorial | tei_model.pPart.transcriptional
tei_model.pPart.edit_alternation =
  tei_model.pPart.editorial_alternation
  | tei_model.pPart.transcriptional_alternation
tei_model.pPart.edit_sequence =
  tei_model.pPart.editorial_sequence,
  tei_model.pPart.transcriptional_sequence
tei_model.pPart.edit_sequenceOptional =
  tei_model.pPart.editorial_sequenceOptional?,
  tei_model.pPart.transcriptional_sequenceOptional?
tei_model.pPart.edit_sequenceOptionalRepeatable =
  tei_model.pPart.editorial_sequenceOptionalRepeatable*,
  tei_model.pPart.transcriptional_sequenceOptionalRepeatable*
tei_model.pPart.edit_sequenceRepeatable =
  tei_model.pPart.editorial_sequenceRepeatable+,
  tei_model.pPart.transcriptional_sequenceRepeatable+
tei_model.ptrLike = tei_ptr
tei_model.ptrLike_alternation = tei_ptr
tei_model.ptrLike_sequence = tei_ptr
tei_model.ptrLike_sequenceOptional = tei_ptr?
tei_model.ptrLike_sequenceOptionalRepeatable = tei_ptr*
tei_model.ptrLike_sequenceRepeatable = tei_ptr+
tei_model.lPart = notAllowed
tei_model.lPart_alternation = notAllowed
tei_model.lPart_sequence = empty
tei_model.lPart_sequenceOptional = empty
tei_model.lPart_sequenceOptionalRepeatable = empty
tei_model.lPart_sequenceRepeatable = notAllowed
tei_model.global.meta = tei_interp | tei_interpGrp
tei_model.global.meta_alternation = tei_interp | tei_interpGrp
tei_model.global.meta_sequence = tei_interp, tei_interpGrp
tei_model.global.meta_sequenceOptional = tei_interp?, tei_interpGrp?
tei_model.global.meta_sequenceOptionalRepeatable =
  tei_interp*, tei_interpGrp*
tei_model.global.meta_sequenceRepeatable = tei_interp+, tei_interpGrp+
tei_model.milestoneLike = notAllowed
tei_model.milestoneLike_alternation = notAllowed
tei_model.milestoneLike_sequence = empty
tei_model.milestoneLike_sequenceOptional = empty
tei_model.milestoneLike_sequenceOptionalRepeatable = empty
tei_model.milestoneLike_sequenceRepeatable = notAllowed
tei_model.gLike = notAllowed
tei_model.oddDecl = notAllowed
tei_model.oddDecl_alternation = notAllowed
tei_model.oddDecl_sequence = empty
tei_model.oddDecl_sequenceOptional = empty
tei_model.oddDecl_sequenceOptionalRepeatable = empty
tei_model.oddDecl_sequenceRepeatable = notAllowed
tei_model.phrase.xml = notAllowed
tei_model.phrase.xml_alternation = notAllowed
tei_model.phrase.xml_sequence = empty
tei_model.phrase.xml_sequenceOptional = empty
tei_model.phrase.xml_sequenceOptionalRepeatable = empty
tei_model.phrase.xml_sequenceRepeatable = notAllowed
tei_model.specDescLike = notAllowed
tei_model.specDescLike_alternation = notAllowed
tei_model.specDescLike_sequence = empty
tei_model.specDescLike_sequenceOptional = empty
tei_model.specDescLike_sequenceOptionalRepeatable = empty
tei_model.specDescLike_sequenceRepeatable = notAllowed
tei_model.biblLike = tei_bibl | tei_biblStruct | tei_msDesc
tei_model.biblLike_alternation = tei_bibl | tei_biblStruct | tei_msDesc
tei_model.biblLike_sequence = tei_bibl, tei_biblStruct, tei_msDesc
tei_model.biblLike_sequenceOptional =
  tei_bibl?, tei_biblStruct?, tei_msDesc?
tei_model.biblLike_sequenceOptionalRepeatable =
  tei_bibl*, tei_biblStruct*, tei_msDesc*
tei_model.biblLike_sequenceRepeatable =
  tei_bibl+, tei_biblStruct+, tei_msDesc+
tei_model.headLike = tei_head
tei_model.headLike_alternation = tei_head
tei_model.headLike_sequence = tei_head
tei_model.headLike_sequenceOptional = tei_head?
tei_model.headLike_sequenceOptionalRepeatable = tei_head*
tei_model.headLike_sequenceRepeatable = tei_head+
tei_model.labelLike = tei_desc | tei_label
tei_model.labelLike_alternation = tei_desc | tei_label
tei_model.labelLike_sequence = tei_desc, tei_label
tei_model.labelLike_sequenceOptional = tei_desc?, tei_label?
tei_model.labelLike_sequenceOptionalRepeatable = tei_desc*, tei_label*
tei_model.labelLike_sequenceRepeatable = tei_desc+, tei_label+
tei_model.listLike = tei_list | tei_listPerson
tei_model.listLike_alternation = tei_list | tei_listPerson
tei_model.listLike_sequence = tei_list, tei_listPerson
tei_model.listLike_sequenceOptional = tei_list?, tei_listPerson?
tei_model.listLike_sequenceOptionalRepeatable =
  tei_list*, tei_listPerson*
tei_model.listLike_sequenceRepeatable = tei_list+, tei_listPerson+
tei_model.noteLike = tei_note
tei_model.noteLike_alternation = tei_note
tei_model.noteLike_sequence = tei_note
tei_model.noteLike_sequenceOptional = tei_note?
tei_model.noteLike_sequenceOptionalRepeatable = tei_note*
tei_model.noteLike_sequenceRepeatable = tei_note+
tei_model.lLike = tei_l
tei_model.lLike_alternation = tei_l
tei_model.lLike_sequence = tei_l
tei_model.lLike_sequenceOptional = tei_l?
tei_model.lLike_sequenceOptionalRepeatable = tei_l*
tei_model.lLike_sequenceRepeatable = tei_l+
tei_model.pLike = tei_p
tei_model.pLike_alternation = tei_p
tei_model.pLike_sequence = tei_p
tei_model.pLike_sequenceOptional = tei_p?
tei_model.pLike_sequenceOptionalRepeatable = tei_p*
tei_model.pLike_sequenceRepeatable = tei_p+
tei_model.stageLike = notAllowed
tei_model.stageLike_alternation = notAllowed
tei_model.stageLike_sequence = empty
tei_model.stageLike_sequenceOptional = empty
tei_model.stageLike_sequenceOptionalRepeatable = empty
tei_model.stageLike_sequenceRepeatable = notAllowed
tei_model.entryPart = notAllowed
tei_model.eventLike = notAllowed
tei_model.global.edit = tei_gap
tei_model.global.edit_alternation = tei_gap
tei_model.global.edit_sequence = tei_gap
tei_model.global.edit_sequenceOptional = tei_gap?
tei_model.global.edit_sequenceOptionalRepeatable = tei_gap*
tei_model.global.edit_sequenceRepeatable = tei_gap+
tei_model.divPart = tei_model.lLike | tei_model.pLike | tei_lg
tei_model.persStateLike = tei_persName | tei_persona
tei_model.personLike = tei_person
tei_model.personPart =
  tei_model.biblLike
  | tei_model.eventLike
  | tei_model.persStateLike
  | tei_idno
tei_model.placeNamePart = notAllowed
tei_model.placeNamePart_alternation = notAllowed
tei_model.placeNamePart_sequence = empty
tei_model.placeNamePart_sequenceOptional = empty
tei_model.placeNamePart_sequenceOptionalRepeatable = empty
tei_model.placeNamePart_sequenceRepeatable = notAllowed
tei_model.placeStateLike = tei_model.placeNamePart
tei_model.placeStateLike_alternation =
  tei_model.placeNamePart_alternation
tei_model.placeStateLike_sequence = tei_model.placeNamePart_sequence
tei_model.placeStateLike_sequenceOptional =
  tei_model.placeNamePart_sequenceOptional?
tei_model.placeStateLike_sequenceOptionalRepeatable =
  tei_model.placeNamePart_sequenceOptionalRepeatable*
tei_model.placeStateLike_sequenceRepeatable =
  tei_model.placeNamePart_sequenceRepeatable+
tei_model.publicationStmtPart.agency = tei_publisher
tei_model.publicationStmtPart.detail =
  tei_model.ptrLike
  | tei_date
  | tei_pubPlace
  | tei_idno
  | tei_availability
tei_model.availabilityPart = tei_licence
tei_model.certLike = notAllowed
tei_model.descLike = tei_desc
tei_model.quoteLike = tei_quote | tei_cit
tei_model.quoteLike_alternation = tei_quote | tei_cit
tei_model.quoteLike_sequence = tei_quote, tei_cit
tei_model.quoteLike_sequenceOptional = tei_quote?, tei_cit?
tei_model.quoteLike_sequenceOptionalRepeatable = tei_quote*, tei_cit*
tei_model.quoteLike_sequenceRepeatable = tei_quote+, tei_cit+
tei_model.attributable = tei_model.quoteLike
tei_model.attributable_alternation = tei_model.quoteLike_alternation
tei_model.attributable_sequence = tei_model.quoteLike_sequence
tei_model.attributable_sequenceOptional =
  tei_model.quoteLike_sequenceOptional?
tei_model.attributable_sequenceOptionalRepeatable =
  tei_model.quoteLike_sequenceOptionalRepeatable*
tei_model.attributable_sequenceRepeatable =
  tei_model.quoteLike_sequenceRepeatable+
tei_model.respLike = tei_author | tei_editor | tei_respStmt
tei_model.divWrapper = notAllowed
tei_model.divTopPart = tei_model.headLike
tei_model.divTop = tei_model.divWrapper | tei_model.divTopPart
tei_model.divBottomPart = notAllowed
tei_model.divBottom = tei_model.divWrapper | tei_model.divBottomPart
tei_model.titlepagePart = notAllowed
tei_model.msQuoteLike = tei_title
tei_model.msItemPart =
  tei_model.biblLike
  | tei_model.quoteLike
  | tei_model.respLike
  | tei_model.msQuoteLike
  | tei_textLang
  | tei_idno
  | tei_msItem
tei_model.imprintPart = tei_publisher | tei_biblScope | tei_pubPlace
tei_model.addressLike = notAllowed
tei_model.addressLike_alternation = notAllowed
tei_model.addressLike_sequence = empty
tei_model.addressLike_sequenceOptional = empty
tei_model.addressLike_sequenceOptionalRepeatable = empty
tei_model.addressLike_sequenceRepeatable = notAllowed
tei_model.nameLike =
  tei_model.nameLike.agent
  | tei_model.offsetLike
  | tei_model.placeStateLike
  | tei_idno
  | tei_model.persNamePart
tei_model.nameLike_alternation =
  tei_model.nameLike.agent_alternation
  | tei_model.offsetLike_alternation
  | tei_model.placeStateLike_alternation
  | tei_idno
  | tei_model.persNamePart_alternation
tei_model.nameLike_sequence =
  tei_model.nameLike.agent_sequence,
  tei_model.offsetLike_sequence,
  tei_model.placeStateLike_sequence,
  tei_idno,
  tei_model.persNamePart_sequence
tei_model.nameLike_sequenceOptional =
  tei_model.nameLike.agent_sequenceOptional?,
  tei_model.offsetLike_sequenceOptional?,
  tei_model.placeStateLike_sequenceOptional?,
  tei_idno?,
  tei_model.persNamePart_sequenceOptional?
tei_model.nameLike_sequenceOptionalRepeatable =
  tei_model.nameLike.agent_sequenceOptionalRepeatable*,
  tei_model.offsetLike_sequenceOptionalRepeatable*,
  tei_model.placeStateLike_sequenceOptionalRepeatable*,
  tei_idno*,
  tei_model.persNamePart_sequenceOptionalRepeatable*
tei_model.nameLike_sequenceRepeatable =
  tei_model.nameLike.agent_sequenceRepeatable+,
  tei_model.offsetLike_sequenceRepeatable+,
  tei_model.placeStateLike_sequenceRepeatable+,
  tei_idno+,
  tei_model.persNamePart_sequenceRepeatable+
tei_model.global =
  tei_model.global.meta
  | tei_model.milestoneLike
  | tei_model.noteLike
  | tei_model.global.edit
tei_model.biblPart =
  tei_model.respLike
  | tei_model.imprintPart
  | tei_quote
  | tei_citedRange
  | tei_bibl
  | tei_textLang
  | tei_availability
  | tei_msIdentifier
tei_model.pPart.data =
  tei_model.dateLike
  | tei_model.measureLike
  | tei_model.addressLike
  | tei_model.nameLike
tei_model.pPart.data_alternation =
  tei_model.dateLike_alternation
  | tei_model.measureLike_alternation
  | tei_model.addressLike_alternation
  | tei_model.nameLike_alternation
tei_model.pPart.data_sequence =
  tei_model.dateLike_sequence,
  tei_model.measureLike_sequence,
  tei_model.addressLike_sequence,
  tei_model.nameLike_sequence
tei_model.pPart.data_sequenceOptional =
  tei_model.dateLike_sequenceOptional?,
  tei_model.measureLike_sequenceOptional?,
  tei_model.addressLike_sequenceOptional?,
  tei_model.nameLike_sequenceOptional?
tei_model.pPart.data_sequenceOptionalRepeatable =
  tei_model.dateLike_sequenceOptionalRepeatable*,
  tei_model.measureLike_sequenceOptionalRepeatable*,
  tei_model.addressLike_sequenceOptionalRepeatable*,
  tei_model.nameLike_sequenceOptionalRepeatable*
tei_model.pPart.data_sequenceRepeatable =
  tei_model.dateLike_sequenceRepeatable+,
  tei_model.measureLike_sequenceRepeatable+,
  tei_model.addressLike_sequenceRepeatable+,
  tei_model.nameLike_sequenceRepeatable+
tei_model.inter =
  tei_model.egLike
  | tei_model.oddDecl
  | tei_model.biblLike
  | tei_model.labelLike
  | tei_model.listLike
  | tei_model.stageLike
  | tei_model.attributable
tei_model.cmc = notAllowed
tei_model.common =
  tei_model.divPart | tei_model.inter | tei_model.cmc | tei_q
tei_model.phrase =
  tei_model.segLike
  | tei_model.highlighted
  | tei_model.graphicLike
  | tei_model.pPart.msdesc
  | tei_model.pPart.edit
  | tei_model.ptrLike
  | tei_model.lPart
  | tei_model.phrase.xml
  | tei_model.specDescLike
  | tei_model.pPart.data
tei_model.paraPart =
  tei_model.gLike
  | tei_model.lLike
  | tei_model.global
  | tei_model.inter
  | tei_model.phrase
  | tei_lg
tei_model.limitedPhrase =
  tei_model.hiLike
  | tei_model.emphLike
  | tei_model.pPart.msdesc
  | tei_model.pPart.editorial
  | tei_model.ptrLike
  | tei_model.phrase.xml
  | tei_model.pPart.data
tei_model.divLike = tei_div
tei_model.divGenLike = notAllowed
tei_model.div1Like = notAllowed
tei_model.annotationLike = tei_note
tei_model.teiHeaderPart = tei_encodingDesc
tei_model.sourceDescPart = notAllowed
tei_model.encodingDescPart =
  tei_projectDesc | tei_samplingDecl | tei_editorialDecl
tei_model.editorialDeclPart = tei_correction
tei_model.standOffPart =
  tei_model.global.meta
  | tei_model.biblLike
  | tei_model.listLike
  | tei_model.annotationLike
  | tei_seg
tei_model.resource = tei_text | tei_standOff
tei_model.describedResource = tei_teiCorpus | tei_TEI
tei_att.personal.attributes =
  tei_att.naming.attributes,
  tei_att.personal.attribute.full,
  tei_att.personal.attribute.sort
tei_att.personal.attribute.full =
  
  ## indicates whether the name component is given in full, as an abbreviation or simply as an initial.
  [ a:defaultValue = "yes" ]
  attribute full {
    
    ## (yes) the name component is spelled out in full.
    "yes"
    | 
      ## (abbreviated) the name component is given in an abbreviated form.
      "abb"
    | 
      ## (initial letter) the name component is indicated only by one initial.
      "init"
  }?
tei_att.personal.attribute.sort =
  
  ## (sort) specifies the sort order of the name component in relation to others within the name.
  attribute sort { xsd:nonNegativeInteger }?
tei_att.calendarSystem.attributes =
  tei_att.calendarSystem.attribute.calendar
tei_att.calendarSystem.attribute.calendar =
  
  ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
  attribute calendar {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
sch:pattern [
  id =
    "arg-att.calendarSystem-calendar-calendar_attr_on_empty_element-constraint-rule-8"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@calendar]"
    "\x{a}" ~
    "         "
    sch:assert [
      test = "string-length( normalize-space(.) ) gt 0"
      " @calendar indicates one or more\x{a}" ~
      "              systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
      "              but this "
      sch:name [ ]
      " element has no textual content."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_p =
  
  ## (paragraph) marks paragraphs in prose. [3.1. Paragraphs 7.2.5. Speech Contents]
  element p {
    tei_macro.paraContent
    >> sch:pattern [
         id =
           "arg-p-abstractModel-structure-p-in-ab-or-p-constraint-rule-9"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:p"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:ab or ancestor::tei:p) and                        not( ancestor::tei:floatingText                           | parent::tei:exemplum                           | parent::tei:item                           | parent::tei:note                           | parent::tei:q                           | parent::tei:quote                           | parent::tei:remarks                           | parent::tei:said                           | parent::tei:sp                           | parent::tei:stage                           | parent::tei:cell                           | parent::tei:figure )"
             "\x{a}" ~
             "          Abstract model violation: Paragraphs may not occur inside other paragraphs or ab elements.\x{a}" ~
             "        "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "arg-p-abstractModel-structure-p-in-l-constraint-rule-10"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:l//tei:p"
           "\x{a}" ~
           "               "
           sch:assert [
             test =
               "ancestor::tei:floatingText | parent::tei:figure | parent::tei:note"
             "\x{a}" ~
             "          Abstract model violation: Metrical lines may not contain higher-level structural elements such as div, p, or ab, unless p is a child of figure or note, or is a descendant of floatingText.\x{a}" ~
             "        "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.cmc.attributes,
    tei_att.declaring.attributes,
    tei_att.fragmentable.attributes,
    tei_att.written.attributes,
    empty
  }
tei_foreign =
  
  ## (foreign) identifies a word or phrase as belonging to some language other than that of the surrounding text. [3.3.2.1. Foreign Words or Expressions]
  element foreign {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.cmc.attributes,
    empty
  }
tei_quote =
  
  ## (quotation) contains a phrase or passage attributed by the narrator or author to some agency external to the text. [3.3.3. Quotation 4.3.1. Grouped Texts]
  element quote {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.cmc.attributes,
    tei_att.msExcerpt.attributes,
    tei_att.notated.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_q =
  
  ## (quoted) contains material which is distinguished from the surrounding text using quotation marks or a similar method, for any one of a variety of reasons including, but not limited to: direct speech or thought, technical terms or jargon, authorial distance, quotations from elsewhere, and passages that are mentioned but not used. [3.3.3. Quotation]
  element q {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.ascribed.directed.attributes,
    tei_att.cmc.attributes,
    
    ## (type) may be used to indicate whether the offset passage is spoken or thought, or to characterize it more finely.
    ## Suggested values include: 1] spoken (spoken); 2] thought (thought); 3] written (written); 4] soCalled (so called); 5] foreign (foreign); 6] distinct (distinct); 7] term; 8] emph (emph); 9] mentioned (mentioned)
    attribute type {
      
      ## (spoken) representation of speech
      "spoken"
      | 
        ## (thought) representation of thought, e.g. internal monologue
        "thought"
      | 
        ## (written) quotation from a written source
        "written"
      | 
        ## (so called) authorial distance
        "soCalled"
      | 
        ## (foreign) foreign words
        "foreign"
      | 
        ## (distinct) linguistically distinct
        "distinct"
      | 
        ## technical term
        "term"
      | 
        ## (emph) rhetorically emphasized
        "emph"
      | 
        ## (mentioned) refering to itself, not its normal referent
        "mentioned"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_cit =
  
  ## (cited quotation) contains a quotation from some other document, together with a bibliographic reference to its source. In a dictionary it may contain an example text with at least one occurrence of the word form, used in the sense being described, or a translation of the headword, or an example. [3.3.3. Quotation 4.3.1. Grouped Texts 10.3.5.1. Examples]
  element cit {
    (tei_model.biblLike
     | tei_model.egLike
     | tei_model.entryPart
     | tei_model.global
     | tei_model.graphicLike
     | tei_model.ptrLike
     | tei_model.attributable
     | tei_q)+,
    tei_att.global.attributes,
    tei_att.cmc.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_mentioned =
  
  ## marks words or phrases mentioned, not used. [3.3.3. Quotation]
  element mentioned {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.cmc.attributes,
    empty
  }
tei_desc =
  
  ## (description) contains a short description of the purpose, function, or use of its parent element, or when the parent is a documentation element, describes or defines the object being documented.  [23.4.1. Description of Components]
  element desc {
    tei_macro.limitedContent
    >> sch:pattern [
         id =
           "arg-desc-deprecationInfo-only-in-deprecated-constraint-rule-11"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:desc[ @type eq 'deprecationInfo']"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "../@validUntil"
             "Information about a\x{a}" ~
             "        deprecation should only be present in a specification element\x{a}" ~
             "        that is being deprecated: that is, only an element that has a\x{a}" ~
             "        @validUntil attribute should have a child <desc\x{a}" ~
             '        type="deprecationInfo">.'
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.cmc.attributes,
    tei_att.typed.attribute.subtype,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    ## Suggested values include: 1] deprecationInfo (deprecation information)
    attribute type {
      
      ## (deprecation information) This element describes why or how its parent element is being deprecated, typically including recommendations for alternate encoding.
      "deprecationInfo"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_gap =
  
  ## (gap) indicates a point where material has been omitted in a transcription, whether for editorial reasons described in the TEI header, as part of sampling practice, or because the material is illegible, invisible, or inaudible. [3.5.3. Additions, Deletions, and Omissions]
  element gap {
    (tei_model.descLike | tei_model.certLike)*,
    tei_att.global.attributes,
    tei_att.cmc.attributes,
    tei_att.dimensions.attributes,
    tei_att.editLike.attributes,
    tei_att.timed.attributes,
    
    ## (reason) gives the reason for omission.
    ## Suggested values include: 1] cancelled (cancelled); 2] deleted (deleted); 3] editorial (editorial); 4] illegible (illegible); 5] inaudible (inaudible); 6] irrelevant (irrelevant); 7] sampling (sampling)
    attribute reason {
      list {
        (
         ## (cancelled) 
         "cancelled"
         | 
           ## (deleted) 
           "deleted"
         | 
           ## (editorial) for features omitted from transcription due to editorial policy
           "editorial"
         | 
           ## (illegible) 
           "illegible"
         | 
           ## (inaudible) 
           "inaudible"
         | 
           ## (irrelevant) 
           "irrelevant"
         | 
           ## (sampling) 
           "sampling"
         | xsd:token { pattern = "[^\p{C}\p{Z}]+" })+
      }
    }?,
    
    ## (agent) in the case of text omitted because of damage, categorizes the cause of the damage, if it can be identified.
    ## Sample values include: 1] rubbing (rubbing); 2] mildew (mildew); 3] smoke (smoke)
    attribute agent {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_date =
  
  ## (date) contains a date in any format. [3.6.4. Dates and Times 2.2.4. Publication, Distribution, Licensing, etc. 2.6. The Revision Description 3.12.2.4. Imprint, Size of a Document, and Reprint Information 16.2.3. The Setting Description 14.4. Dates]
  element date {
    (text | tei_model.gLike | tei_model.phrase | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.calendarSystem.attributes,
    tei_att.canonical.attributes,
    tei_att.cmc.attributes,
    tei_att.datable.attributes,
    tei_att.dimensions.attributes,
    tei_att.editLike.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_ptr =
  
  ## (pointer) defines a pointer to another location. [3.7. Simple Links and Cross-References 17.1. Links]
  element ptr {
    empty
    >> sch:pattern [
         id = "arg-ptr-ptrAtts-constraint-rule-12"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ptr"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @cRef"
             "Only one of the attributes @target and @cRef may be supplied on "
             sch:name [ ]
             "."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.cReferencing.attributes,
    tei_att.cmc.attributes,
    tei_att.declaring.attributes,
    tei_att.internetMedia.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_list =
  
  ## (list) contains any sequence of items organized as a list. [3.8. Lists]
  element list {
    ((tei_model.divTop | tei_model.global | tei_desc*)*,
     ((tei_item, tei_model.global*)+
      | (tei_label, tei_model.global*, tei_item, tei_model.global*)+),
     (tei_model.divBottom, tei_model.global*)*)
    >> sch:pattern [
         id = "arg-list-gloss-list-must-have-labels-constraint-rule-13"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:list[@type='gloss']"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "tei:label"
             'The content of a "gloss" list should include a sequence of one or more pairs of a label element followed by an item element'
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.cmc.attributes,
    tei_att.sortable.attributes,
    tei_att.typed.attribute.subtype,
    
    ## (type) describes the nature of the items in the list.
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_item =
  
  ## (item) contains one component of a list. [3.8. Lists 2.6. The Revision Description]
  element item {
    tei_macro.specialPara,
    tei_att.typed.attribute.subtype,
    tei_att.global.attributes,
    tei_att.sortable.attributes,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    ## Suggested values include: 1] premise; 2] rule (inference rule); 3] conclusion
    attribute type {
      
      ## a proposition that supports the conclusion of an argument.
      "premise"
      | 
        ## (inference rule) a way of drawing a conclusion from a set of premises.
        "rule"
      | 
        ## the claim of an argument, following from its premises and rule application.
        "conclusion"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_label =
  
  ## (label) contains any label or heading used to identify part of a text, typically but not exclusively in a list or glossary. [3.8. Lists]
  element label {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.cmc.attributes,
    tei_att.placement.attributes,
    tei_att.typed.attributes,
    tei_att.written.attributes,
    empty
  }
tei_head =
  
  ## (heading) contains any type of heading, for example the title of a section, or the heading of a list, glossary, manuscript description, etc. [4.2.1. Headings and Trailers]
  element head {
    (text
     | tei_lg
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.inter
     | tei_model.lLike
     | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.cmc.attributes,
    tei_att.placement.attributes,
    tei_att.typed.attributes,
    tei_att.written.attributes,
    empty
  }
tei_note =
  
  ## (note) contains a note or annotation. [3.9.1. Notes and Simple Annotation 2.2.6. The Notes Statement 3.12.2.8. Notes and Statement of Language 10.3.5.4. Notes within Entries]
  element note {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.anchoring.attributes,
    tei_att.cmc.attributes,
    tei_att.placement.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    tei_att.written.attributes,
    empty
  }
tei_monogr =
  
  ## (monographic level) contains bibliographic elements describing an item (e.g. a book or journal) published as an independent item (i.e. as a separate physical object). [3.12.2.1. Analytic, Monographic, and Series Levels]
  element monogr {
    ((((tei_author | tei_editor | tei_respStmt),
       (tei_author | tei_editor | tei_respStmt)*,
       tei_title+,
       (tei_model.ptrLike
        | tei_idno
        | tei_textLang
        | tei_editor
        | tei_respStmt)*)
      | ((tei_title | tei_model.ptrLike | tei_idno)+,
         (tei_textLang | tei_author | tei_editor | tei_respStmt)*)
      | tei_idno)?,
     tei_availability*,
     tei_model.noteLike*,
     (tei_idno | tei_model.ptrLike | tei_editor | tei_respStmt)*,
     tei_imprint,
     (tei_imprint | tei_biblScope)*),
    tei_att.global.attributes,
    empty
  }
tei_author =
  
  ## (author) in a bibliographic reference, contains the name(s) of an author, personal or corporate, of a work; for example in the same form as that provided by a recognized bibliographic name authority. [3.12.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement]
  element author {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.naming.attributes,
    empty
  }
tei_editor =
  
  ## contains a secondary statement of responsibility for a bibliographic item, for example the name of an individual, institution or organization, (or of several such) acting as editor, compiler, translator, etc. [3.12.2.2. Titles, Authors, and Editors]
  element editor {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.naming.attributes,
    empty
  }
tei_respStmt =
  
  ## (statement of responsibility) supplies a statement of responsibility for the intellectual content of a text, edition, recording, or series, where the specialized elements for authors, editors, etc. do not suffice or do not apply. May also be used to encode information about individuals or organizations which have played a role in the production or distribution of a bibliographic work. [3.12.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.2. The Edition Statement 2.2.5. The Series Statement]
  element respStmt {
    (((tei_resp+, tei_model.nameLike.agent+)
      | (tei_model.nameLike.agent+, tei_resp+)),
     tei_note*),
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    empty
  }
tei_resp =
  
  ## (responsibility) contains a phrase describing the nature of a person's intellectual responsibility, or an organization's role in the production or distribution of a work. [3.12.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.2. The Edition Statement 2.2.5. The Series Statement]
  element resp {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_title =
  
  ## (title) contains a title for any kind of work. [3.12.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.5. The Series Statement]
  element title {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    tei_att.cmc.attributes,
    tei_att.datable.attributes,
    tei_att.typed.attribute.subtype,
    
    ## classifies the title according to some convenient typology.
    ## Sample values include: 1] main; 2] sub (subordinate); 3] alt (alternate); 4] short; 5] desc (descriptive)
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## indicates the bibliographic level for a title, that is, whether it identifies an article, book, journal, series, or unpublished material.
    attribute level {
      
      ## (analytic) the title applies to an analytic item, such as an article, poem, or other work published as part of a larger item.
      "a"
      | 
        ## (monographic) the title applies to a monograph such as a book or other item considered to be a distinct publication, including single volumes of multi-volume works
        "m"
      | 
        ## (journal) the title applies to any serial or periodical publication such as a journal, magazine, or newspaper
        "j"
      | 
        ## (series) the title applies to a series of otherwise distinct publications such as a collection
        "s"
      | 
        ## (unpublished) the title applies to any unpublished material (including theses and dissertations unless published by a commercial press)
        "u"
    }?,
    empty
  }
tei_imprint =
  
  ## groups information relating to the publication or distribution of a bibliographic item. [3.12.2.4. Imprint, Size of a Document, and Reprint Information]
  element imprint {
    (empty*,
     ((tei_model.imprintPart | tei_model.dateLike),
      tei_respStmt*,
      tei_model.global*)+),
    tei_att.global.attributes,
    empty
  }
tei_publisher =
  
  ## (publisher) provides the name of the organization responsible for the publication or distribution of a bibliographic item. [3.12.2.4. Imprint, Size of a Document, and Reprint Information 2.2.4. Publication, Distribution, Licensing, etc.]
  element publisher {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    empty
  }
tei_biblScope =
  
  ## (scope of bibliographic reference) defines the scope of a bibliographic reference, for example as a list of page numbers, or a named subdivision of a larger work. [3.12.2.5. Scopes and Ranges in Bibliographic Citations]
  element biblScope {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.citing.attributes,
    empty
  }
tei_citedRange =
  
  ## (cited range) defines the range of cited content, often represented by pages or other units. [3.12.2.5. Scopes and Ranges in Bibliographic Citations]
  element citedRange {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.citing.attributes,
    tei_att.pointing.attributes,
    empty
  }
tei_pubPlace =
  
  ## (publication place) contains the name of the place where a bibliographic item was published. [3.12.2.4. Imprint, Size of a Document, and Reprint Information]
  element pubPlace {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    empty
  }
tei_bibl =
  
  ## (bibliographic citation) contains a loosely-structured bibliographic citation of which the sub-components may or may not be explicitly tagged. [3.12.1. Methods of Encoding Bibliographic References and Lists of References 2.2.7. The Source Description 16.3.2. Declarable Elements]
  element bibl {
    (text
     | tei_model.gLike
     | tei_model.highlighted
     | tei_model.pPart.data
     | tei_model.pPart.edit
     | tei_model.segLike
     | tei_model.ptrLike
     | tei_model.biblPart
     | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    tei_att.cmc.attributes,
    tei_att.declarable.attributes,
    tei_att.docStatus.attributes,
    tei_att.sortable.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_biblStruct =
  
  ## (structured bibliographic citation) contains a structured bibliographic citation, in which only bibliographic sub-elements appear and in a specified order. [3.12.1. Methods of Encoding Bibliographic References and Lists of References 2.2.7. The Source Description 16.3.2. Declarable Elements]
  element biblStruct {
    (tei_monogr+,
     (tei_model.noteLike | tei_model.ptrLike | tei_citedRange)*),
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    tei_att.cmc.attributes,
    tei_att.declarable.attributes,
    tei_att.docStatus.attributes,
    tei_att.sortable.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_l =
  
  ## (verse line) contains a single, possibly incomplete, line of verse. [3.13.1. Core Tags for Verse 3.13. Passages of Verse or Drama 7.2.5. Speech Contents]
  element l {
    ((text
      | tei_model.gLike
      | tei_model.phrase
      | tei_model.inter
      | tei_model.global)*)
    >> sch:pattern [
         id = "arg-l-abstractModel-structure-l-in-l-constraint-rule-14"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:l"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:l[not(.//tei:note//tei:l[. = current()])]"
             "Abstract model violation: Lines may not contain lines or lg elements."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.cmc.attributes,
    tei_att.fragmentable.attributes,
    empty
  }
tei_lg =
  
  ## (line group) contains one or more verse lines functioning as a formal unit, e.g. a stanza, refrain, verse paragraph, etc. [3.13.1. Core Tags for Verse 3.13. Passages of Verse or Drama 7.2.5. Speech Contents]
  element lg {
    ((tei_model.divTop | tei_model.global)*,
     (tei_model.lLike
      | tei_model.stageLike
      | tei_model.labelLike
      | tei_model.pPart.transcriptional
      | tei_lg),
     (tei_model.lLike
      | tei_model.stageLike
      | tei_model.labelLike
      | tei_model.pPart.transcriptional
      | tei_model.global
      | tei_lg)*,
     (tei_model.divBottom, tei_model.global*)*)
    >> sch:pattern [
         id = "arg-lg-atleast1oflggapl-constraint-rule-15"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:lg"
           "\x{a}" ~
           "               "
           sch:assert [
             test =
               "count(descendant::tei:lg|descendant::tei:l|descendant::tei:gap) > 0"
             "An lg element must contain at least one child l, lg, or gap element."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "arg-lg-abstractModel-structure-lg-in-l-constraint-rule-16"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:lg"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:l[not(.//tei:note//tei:lg[. = current()])]"
             "Abstract model violation: Lines may not contain line groups."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.cmc.attributes,
    tei_att.declaring.attributes,
    tei_att.divLike.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_teiCorpus =
  [
    a:documentation [
      "(TEI corpus) contains the whole of a TEI encoded corpus, comprising a single corpus header and one or more "
      ns1:code [ "<TEI>" ]
      " elements, each containing a single text header and a text. [4. Default Text Structure 16.1. Varieties of Composite Text]"
    ]
  ]
  element teiCorpus {
    (tei_teiHeader, tei_model.resource*, tei_model.describedResource+),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    
    ## (version) specifies the version number of the TEI Guidelines against which this document is valid.
    attribute version {
      xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
    }?,
    empty
  }
tei_textLang =
  
  ## (text language) describes the languages and writing systems identified within the bibliographic work being described, rather than its description. [3.12.2.4. Imprint, Size of a Document, and Reprint Information 11.6.6. Languages and Writing Systems]
  element textLang {
    tei_macro.specialPara,
    tei_att.global.attributes,
    
    ## (main language) supplies a code which identifies the chief language used in the bibliographic work.
    attribute mainLang {
      xsd:language
      | (
         ##
         "")
    }?,
    
    ## (other languages) one or more codes identifying any other languages used in the bibliographic work.
    attribute otherLangs {
      list {
        (xsd:language
         | (
            ##
            ""))*
      }
    }?,
    empty
  }
tei_teiHeader =
  
  ## (TEI header) supplies descriptive and declarative metadata associated with a digital resource or set of resources. [2.1.1. The TEI Header and Its Components 16.1. Varieties of Composite Text]
  element teiHeader {
    (tei_fileDesc, tei_model.teiHeaderPart*),
    tei_att.global.attributes,
    empty
  }
tei_fileDesc =
  
  ## (file description) contains a full bibliographic description of an electronic file. [2.2. The File Description 2.1.1. The TEI Header and Its Components]
  element fileDesc {
    ((tei_titleStmt, tei_publicationStmt), tei_sourceDesc+),
    tei_att.global.attributes,
    empty
  }
tei_titleStmt =
  
  ## (title statement) groups information about the title of a work and those responsible for its content. [2.2.1. The Title Statement 2.2. The File Description]
  element titleStmt {
    (tei_title+, tei_model.respLike*), tei_att.global.attributes, empty
  }
tei_publicationStmt =
  
  ## (publication statement) groups information concerning the publication or distribution of an electronic or other text. [2.2.4. Publication, Distribution, Licensing, etc. 2.2. The File Description]
  element publicationStmt {
    ((tei_model.publicationStmtPart.agency,
      tei_model.publicationStmtPart.detail*)+
     | tei_model.pLike+),
    tei_att.global.attributes,
    empty
  }
tei_idno =
  
  ## (identifier) supplies any form of identifier used to identify some object, such as a bibliographic item, a person, a title, an organization, etc. in a standardized way. [14.3.1. Basic Principles 2.2.4. Publication, Distribution, Licensing, etc. 2.2.5. The Series Statement 3.12.2.4. Imprint, Size of a Document, and Reprint Information]
  element idno {
    (text | tei_model.gLike | tei_idno)*,
    tei_att.global.attributes,
    tei_att.cmc.attributes,
    tei_att.datable.attributes,
    tei_att.sortable.attributes,
    tei_att.typed.attribute.subtype,
    
    ## categorizes the identifier, for example as an ISBN, Social Security number, etc.
    ## Suggested values include: 1] ISBN; 2] ISSN; 3] DOI; 4] URI; 5] VIAF; 6] ESTC; 7] OCLC
    attribute type {
      [
        a:documentation [
          "International Standard Book Number: a 13- or (if assigned prior to 2007) 10-digit identifying number assigned by the publishing industry to a published book or similar item, registered with the "
          ns1:a [
            href = "https://www.isbn-international.org"
            " International ISBN Agency."
          ]
          "\x{a}" ~
          "                  "
        ]
      ]
      "ISBN"
      | 
        ## International Standard Serial Number: an eight-digit number to uniquely identify a serial publication.
        "ISSN"
      | 
        ## Digital Object Identifier: a unique string of letters and numbers assigned to an electronic document.
        "DOI"
      | [
          a:documentation [
            "Uniform Resource Identifier: a string of characters to uniquely identify a resource, following the syntax of "
            ns1:a [
              href = "https://datatracker.ietf.org/doc/html/rfc3986"
              "RFC 3986"
            ]
            "."
          ]
        ]
        "URI"
      | 
        ## A data number in the Virtual Internet Authority File assigned to link different names in catalogs around the world for the same entity.
        "VIAF"
      | 
        ## English Short-Title Catalogue number: an identifying number assigned to a document in English printed in the British Isles or North America before 1801.
        "ESTC"
      | 
        ## OCLC control number (record number) for the union catalog record in WorldCat, a union catalog for member libraries in the Online Computer Library Center global cooperative.
        "OCLC"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_availability =
  
  ## (availability) supplies information about the availability of a text, for example any restrictions on its use or distribution, its copyright status, any licence applying to it, etc. [2.2.4. Publication, Distribution, Licensing, etc.]
  element availability {
    (tei_model.availabilityPart | tei_model.pLike)+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    
    ## (status) supplies a code identifying the current availability of the text.
    attribute status {
      
      ## (free) the text is freely available.
      "free"
      | 
        ## (unknown) the status of the text is unknown.
        "unknown"
      | 
        ## (restricted) the text is not freely available.
        "restricted"
    }?,
    empty
  }
tei_licence =
  
  ## contains information about a licence or other legal agreement applicable to the text. [2.2.4. Publication, Distribution, Licensing, etc.]
  element licence {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.pointing.attributes,
    empty
  }
tei_sourceDesc =
  
  ## (source description) describes the source(s) from which an electronic text was derived or generated, typically a bibliographic description in the case of a digitized text, or a phrase such as born digital for a text which has no previous existence. [2.2.7. The Source Description]
  element sourceDesc {
    (tei_model.pLike+
     | (tei_model.biblLike
        | tei_model.sourceDescPart
        | tei_model.listLike)+),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_encodingDesc =
  
  ## (encoding description) documents the relationship between an electronic text and the source or sources from which it was derived. [2.3. The Encoding Description 2.1.1. The TEI Header and Its Components]
  element encodingDesc {
    (tei_model.encodingDescPart | tei_model.pLike)+,
    tei_att.global.attributes,
    empty
  }
tei_projectDesc =
  
  ## (project description) describes in detail the aim or purpose for which an electronic file was encoded, together with any other relevant information concerning the process by which it was assembled or collected. [2.3.1. The Project Description 2.3. The Encoding Description 16.3.2. Declarable Elements]
  element projectDesc {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_samplingDecl =
  
  ## (sampling declaration) contains a prose description of the rationale and methods used in selecting texts, or parts of a text, for inclusion in the resource. [2.3.2. The Sampling Declaration 2.3. The Encoding Description 16.3.2. Declarable Elements]
  element samplingDecl {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_editorialDecl =
  
  ## (editorial practice declaration) provides details of editorial principles and practices applied during the encoding of a text. [2.3.3. The Editorial Practices Declaration 2.3. The Encoding Description 16.3.2. Declarable Elements]
  element editorialDecl {
    (tei_model.pLike | tei_model.editorialDeclPart)+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_correction =
  
  ## (correction principles) states how and under what circumstances corrections have been made in the text. [2.3.3. The Editorial Practices Declaration 16.3.2. Declarable Elements]
  element correction {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    
    ## indicates the degree of correction applied to the text.
    attribute status {
      
      ## the text has been thoroughly checked and proofread.
      "high"
      | 
        ## the text has been checked at least once.
        "medium"
      | 
        ## the text has not been checked.
        "low"
      | 
        ## the correction status of the text is unknown.
        "unknown"
    }?,
    
    ## indicates the method adopted to indicate corrections within the text.
    [ a:defaultValue = "silent" ]
    attribute method {
      
      ## corrections have been made silently
      "silent"
      | 
        ## corrections have been represented using markup
        "markup"
    }?,
    empty
  }
tei_TEI =
  [
    a:documentation [
      "(TEI document) contains a single TEI-conformant document, combining a single TEI header with one or more members of the model.resource class. Multiple "
      ns1:code [ "<TEI>" ]
      " elements may be combined within a "
      ns1:code [ "<TEI>" ]
      " (or "
      ns1:code [ "<teiCorpus>" ]
      ") element. [4. Default Text Structure 16.1. Varieties of Composite Text]"
    ]
  ]
  element TEI {
    (tei_teiHeader,
     ((tei_model.resource+, tei_TEI*) | tei_TEI+)),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    
    ## specifies the version number of the TEI Guidelines against which this document is valid.
    attribute version {
      xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
    }?,
    empty
  }
tei_text =
  
  ## (text) contains a single text of any kind, whether unitary or composite, for example a poem or drama, a collection of essays, a novel, a dictionary, or a corpus sample. [4. Default Text Structure 16.1. Varieties of Composite Text]
  element text {
    (tei_model.global*, (tei_body), tei_model.global*),
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    tei_att.typed.attributes,
    tei_att.written.attributes,
    empty
  }
tei_body =
  
  ## (text body) contains the whole body of a single unitary text, excluding any front or back matter. [4. Default Text Structure]
  element body {
    (tei_model.global*,
     (tei_model.divTop, (tei_model.global | tei_model.divTop)*)?,
     (tei_model.divGenLike,
      (tei_model.global | tei_model.divGenLike)*)?,
     ((tei_model.divLike, (tei_model.global | tei_model.divGenLike)*)+
      | (tei_model.div1Like,
         (tei_model.global | tei_model.divGenLike)*)+
      | (((tei_model.common), tei_model.global*)+,
         ((tei_model.divLike,
           (tei_model.global | tei_model.divGenLike)*)+
          | (tei_model.div1Like,
             (tei_model.global | tei_model.divGenLike)*)+)?)),
     (tei_model.divBottom, tei_model.global*)*),
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_div =
  
  ## (text division) contains a subdivision of the front, body, or back of a text. [4.1. Divisions of the Body]
  element div {
    ((tei_model.divTop | tei_model.global)*,
     ((((tei_model.divLike | tei_model.divGenLike), tei_model.global*)+
       | ((tei_model.common, tei_model.global*)+,
          ((tei_model.divLike | tei_model.divGenLike),
           tei_model.global*)*)),
      (tei_model.divBottom, tei_model.global*)*)?)
    >> sch:pattern [
         id =
           "arg-div-abstractModel-structure-div-in-l-constraint-rule-17"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:l//tei:div"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "ancestor::tei:floatingText"
             "\x{a}" ~
             "          Abstract model violation: Metrical lines may not contain higher-level structural elements such as div, unless div is a descendant of floatingText.\x{a}" ~
             "        "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "arg-div-abstractModel-structure-div-in-ab-or-p-constraint-rule-18"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:div"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:p or ancestor::tei:ab) and not(ancestor::tei:floatingText)"
             "\x{a}" ~
             "          Abstract model violation: p and ab may not contain higher-level structural elements such as div, unless div is a descendant of floatingText.\x{a}" ~
             "        "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    tei_att.divLike.attributes,
    tei_att.placement.attributes,
    tei_att.typed.attributes,
    tei_att.written.attributes,
    empty
  }
tei_att.msExcerpt.attributes = tei_att.msExcerpt.attribute.defective
tei_att.msExcerpt.attribute.defective =
  
  ## indicates whether the passage being quoted is defective, i.e. incomplete through loss or damage.
  attribute defective {
    xsd:boolean
    | (
       ##
       "unknown"
       | 
         ##
         "inapplicable")
  }?
tei_att.msClass.attributes = tei_att.msClass.attribute.class
tei_att.msClass.attribute.class =
  
  ## identifies the text types or classifications applicable to this item by pointing to other elements or resources defining the classification concerned.
  attribute class {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_msDesc =
  
  ## (manuscript description) contains a description of a single identifiable manuscript or other text-bearing object such as an early printed book. [11.1. Overview]
  element msDesc {
    (tei_msIdentifier,
     tei_model.headLike*,
     (tei_model.pLike+ | (tei_msContents)*))
    >> sch:pattern [
         id = "arg-msDesc-one_ms_singleton_max-constraint-rule-19"
         "\x{a}" ~
         "            "
         sch:rule [
           context =
             "tei:msContents|tei:physDesc|tei:history|tei:additional"
           "\x{a}" ~
           "               "
           sch:let [ name = "gi" value = "name(.)" ]
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "preceding-sibling::*[ name(.) eq $gi ]                           and                           not( following-sibling::*[ name(.) eq $gi ] )"
             "\x{a}" ~
             "          Only one "
             sch:name [ ]
             " is allowed as a child of "
             sch:value-of [ select = "name(..)" ]
             ".\x{a}" ~
             "        "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    tei_att.docStatus.attributes,
    tei_att.sortable.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_locus =
  
  ## (locus) defines a location within a manuscript, manuscript part, or other object typically as a (possibly discontinuous) sequence of folio references. [11.3.5. References to Locations within a Manuscript]
  element locus {
    (text | tei_model.gLike | tei_locus)*,
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    [
      a:documentation [
        "(scheme) identifies the foliation scheme in terms of which the location is being specified by pointing to some "
        ns1:code [ "<foliation>" ]
        " element defining it, or to some other equivalent resource."
      ]
    ]
    attribute scheme {
      xsd:anyURI { pattern = "\S+" }
    }?,
    
    ## (from) specifies the starting point of the location in a normalized form, typically a page number.
    attribute from {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## (to) specifies the end-point of the location in a normalized form, typically as a page number.
    attribute to {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_msIdentifier =
  
  ## (manuscript identifier) contains the information required to identify the manuscript or similar object being described. [11.4. The Manuscript Identifier]
  element msIdentifier {
    ((tei_institution?, tei_idno*), empty*)
    >> sch:pattern [
         id = "arg-msIdentifier-msId_minimal-constraint-rule-20"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:msIdentifier"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "not( parent::tei:msPart )                           and                           ( child::*[1]/self::idno  or  child::*[1]/self::altIdentifier  or  normalize-space(.) eq '')"
             "An msIdentifier must contain either a repository or location."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    empty
  }
tei_institution =
  
  ## (institution) contains the name of an organization such as a university or library, with which a manuscript or other object is identified, generally its holding institution. [11.4. The Manuscript Identifier]
  element institution {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    empty
  }
tei_msContents =
  
  ## (manuscript contents) describes the intellectual content of a manuscript, manuscript part, or other object either as a series of paragraphs or as a series of structured manuscript items. [11.6. Intellectual Content]
  element msContents {
    (tei_model.pLike+
     | (tei_textLang?, (tei_msItem)*)),
    tei_att.global.attributes,
    tei_att.msClass.attributes,
    tei_att.msExcerpt.attributes,
    empty
  }
tei_msItem =
  
  ## (manuscript item) describes an individual work or item within the intellectual content of a manuscript, manuscript part, or other object. [11.6.1. The msItem and msItemStruct Elements]
  element msItem {
    ((tei_locus)*,
     (tei_model.pLike+
      | (tei_model.titlepagePart
         | tei_model.msItemPart
         | tei_model.global)+)),
    tei_att.global.attributes,
    tei_att.msClass.attributes,
    tei_att.msExcerpt.attributes,
    empty
  }
tei_att.global.facs.attributes = tei_att.global.facs.attribute.facs
tei_att.global.facs.attribute.facs =
  
  ## (facsimile) points to one or more images, portions of an image, or surfaces which correspond to the current element.
  attribute facs {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.global.change.attributes =
  tei_att.global.change.attribute.change
tei_att.global.change.attribute.change =
  [
    a:documentation [
      "points to one or more "
      ns1:code [ "<change>" ]
      " elements documenting a state or revision campaign to which the element bearing this attribute and its children have been assigned by the encoder."
    ]
  ]
  attribute change {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.datable.custom.attributes =
  tei_att.datable.custom.attribute.when-custom,
  tei_att.datable.custom.attribute.notBefore-custom,
  tei_att.datable.custom.attribute.notAfter-custom,
  tei_att.datable.custom.attribute.from-custom,
  tei_att.datable.custom.attribute.to-custom,
  tei_att.datable.custom.attribute.datingPoint,
  tei_att.datable.custom.attribute.datingMethod
tei_att.datable.custom.attribute.when-custom =
  
  ## supplies the value of a date or time in some custom standard form.
  attribute when-custom {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
tei_att.datable.custom.attribute.notBefore-custom =
  
  ## specifies the earliest possible date for the event in some custom standard form.
  attribute notBefore-custom {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
tei_att.datable.custom.attribute.notAfter-custom =
  
  ## specifies the latest possible date for the event in some custom standard form.
  attribute notAfter-custom {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
tei_att.datable.custom.attribute.from-custom =
  
  ## indicates the starting point of the period in some custom standard form.
  attribute from-custom {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
tei_att.datable.custom.attribute.to-custom =
  
  ## indicates the ending point of the period in some custom standard form.
  attribute to-custom {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
tei_att.datable.custom.attribute.datingPoint =
  
  ## supplies a pointer to some location defining a named point in time with reference to which the datable item is understood to have occurred.
  attribute datingPoint {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.datable.custom.attribute.datingMethod =
  [
    a:documentation [
      "supplies a pointer to a "
      ns1:code [ "<calendar>" ]
      " element or other means of interpreting the values of the custom dating attributes."
    ]
  ]
  attribute datingMethod {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_model.persNamePart = notAllowed
tei_model.persNamePart_alternation = notAllowed
tei_model.persNamePart_sequence = empty
tei_model.persNamePart_sequenceOptional = empty
tei_model.persNamePart_sequenceOptionalRepeatable = empty
tei_model.persNamePart_sequenceRepeatable = notAllowed
tei_att.datable.iso.attributes =
  tei_att.datable.iso.attribute.when-iso,
  tei_att.datable.iso.attribute.notBefore-iso,
  tei_att.datable.iso.attribute.notAfter-iso,
  tei_att.datable.iso.attribute.from-iso,
  tei_att.datable.iso.attribute.to-iso
tei_att.datable.iso.attribute.when-iso =
  
  ## supplies the value of a date or time in a standard form.
  attribute when-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
tei_att.datable.iso.attribute.notBefore-iso =
  
  ## specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notBefore-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
tei_att.datable.iso.attribute.notAfter-iso =
  
  ## specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notAfter-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
tei_att.datable.iso.attribute.from-iso =
  
  ## indicates the starting point of the period in standard form.
  attribute from-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
tei_att.datable.iso.attribute.to-iso =
  
  ## indicates the ending point of the period in standard form.
  attribute to-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
tei_persName =
  
  ## (personal name) contains a proper noun or proper-noun phrase referring to a person, possibly including one or more of the person's forenames, surnames, honorifics, added names, etc. [14.2.1. Personal Names]
  element persName {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.cmc.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.personal.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_listPerson =
  
  ## (list of persons) contains a list of descriptions, each of which provides information about an identifiable person or a group of people, for example the participants in a language interaction, or the people referred to in a historical source. [14.3.2. The Person Element 16.2. Contextual Information 2.4. The Profile Description 16.3.2. Declarable Elements]
  element listPerson {
    (tei_model.headLike*,
     tei_desc*,
     empty*,
     ((tei_model.personLike | tei_listPerson)+, empty*)+),
    tei_att.global.attributes,
    tei_att.cmc.attributes,
    tei_att.declarable.attributes,
    tei_att.sortable.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_person =
  
  ## (person) provides information about an identifiable individual, for example a participant in a language interaction, or a person referred to in a historical source. [14.3.2. The Person Element 16.2.2. The Participant Description]
  element person {
    (tei_model.pLike+
     | (tei_model.personPart | tei_model.global | tei_model.ptrLike)*),
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.sortable.attributes,
    
    ## specifies a primary role or classification for the person.
    attribute role {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    
    ## specifies the sex of the person.
    attribute sex {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    
    ## specifies the gender of the person.
    attribute gender {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    
    ## specifies an age group for the person.
    attribute age {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_persona =
  
  ## provides information about one of the personalities identified for a given individual, where an individual has multiple personalities. [14.3.2. The Person Element]
  element persona {
    (tei_model.pLike+ | (tei_model.personPart | tei_model.global)*),
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.sortable.attributes,
    
    ## specifies a primary role or classification for the persona.
    attribute role {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    
    ## specifies the sex of the persona.
    attribute sex {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    
    ## specifies the gender of the persona.
    attribute gender {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    
    ## specifies an age group for the persona.
    attribute age {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_att.global.linking.attributes =
  tei_att.global.linking.attribute.corresp,
  tei_att.global.linking.attribute.synch,
  tei_att.global.linking.attribute.sameAs,
  tei_att.global.linking.attribute.copyOf,
  tei_att.global.linking.attribute.next,
  tei_att.global.linking.attribute.prev,
  tei_att.global.linking.attribute.exclude,
  tei_att.global.linking.attribute.select
tei_att.global.linking.attribute.corresp =
  
  ## (corresponds) points to elements that correspond to the current element in some way.
  attribute corresp {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.global.linking.attribute.synch =
  
  ## (synchronous) points to elements that are synchronous with the current element.
  attribute synch {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.global.linking.attribute.sameAs =
  
  ## points to an element that is the same as the current element.
  attribute sameAs {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.global.linking.attribute.copyOf =
  
  ## points to an element of which the current element is a copy.
  attribute copyOf {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.global.linking.attribute.next =
  
  ## (next) points to the next element of a virtual aggregate of which the current element is part.
  attribute next {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.global.linking.attribute.prev =
  
  ## (previous) points to the previous element of a virtual aggregate of which the current element is part.
  attribute prev {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.global.linking.attribute.exclude =
  
  ## points to elements that are in exclusive alternation with the current element.
  attribute exclude {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.global.linking.attribute.select =
  
  ## selects one or more alternants; if one alternant is selected, the ambiguity or uncertainty is marked as resolved. If more than one alternant is selected, the degree of ambiguity or uncertainty is marked as reduced by the number of alternants not selected.
  attribute select {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_seg =
  
  ## (arbitrary segment) represents any segmentation of text below the chunk level. [17.3. Blocks, Segments, and Anchors 6.2. Components of the Verse Line 7.2.5. Speech Contents]
  element seg {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.cmc.attributes,
    tei_att.notated.attributes,
    tei_att.segLike.attributes,
    tei_att.typed.attributes,
    tei_att.written.attributes,
    empty
  }
tei_standOff =
  
  ## Functions as a container element for linked data, contextual information, and stand-off annotations embedded in a TEI document. [17.10. The standOff Container]
  element standOff {
    (tei_model.standOffPart+)
    >> sch:pattern [
         id =
           "arg-standOff-nested_standOff_should_be_typed-constraint-rule-21"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:standOff"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@type or not(ancestor::tei:standOff)"
             "This\x{a}" ~
             "        "
             sch:name [ ]
             " element must have a @type attribute, since it is\x{a}" ~
             "        nested inside a "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_att.global.analytic.attributes =
  tei_att.global.analytic.attribute.about,
  tei_att.global.analytic.attribute.ana
tei_att.global.analytic.attribute.about =
  
  ## points to one or more elements representing topics of the text.
  attribute about {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.global.analytic.attribute.ana =
  [
    a:documentation [
      "(analysis) indicates one or more elements containing interpretations of the element on which the "
      ns1:code [ "@ana" ]
      " attribute appears."
    ]
  ]
  attribute ana {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_interp =
  
  ## (interpretation) summarizes a specific interpretative annotation which can be linked to a span of text. [18.3. Spans and Interpretations]
  element interp {
    (text | tei_model.gLike | tei_model.descLike | tei_model.certLike)*,
    tei_att.global.attributes,
    tei_att.cmc.attributes,
    tei_att.interpLike.attributes,
    empty
  }
tei_interpGrp =
  
  ## (interpretation group) collects together a set of related interpretations which share responsibility or type. [18.3. Spans and Interpretations]
  element interpGrp {
    (tei_model.descLike*, tei_interp+),
    tei_att.global.attributes,
    tei_att.cmc.attributes,
    tei_att.interpLike.attributes,
    empty
  }
start = tei_TEI | tei_teiCorpus
sch:ns [ prefix = "tei" uri = "http://www.tei-c.org/ns/1.0" ]
sch:ns [ prefix = "xs" uri = "http://www.w3.org/2001/XMLSchema" ]
sch:ns [ prefix = "rng" uri = "http://relaxng.org/ns/structure/1.0" ]
sch:ns [
  prefix = "rna"
  uri = "http://relaxng.org/ns/compatibility/annotations/1.0"
]
sch:ns [ prefix = "sch" uri = "http://purl.oclc.org/dsdl/schematron" ]
sch:ns [ prefix = "sch1x" uri = "http://www.ascc.net/xml/schematron" ]
